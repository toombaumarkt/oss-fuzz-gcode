#!/bin/bash -eu
# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
################################################################################

# copy gcode dictionary to OUT directoy
cp $SRC/gcode-fuzzing-testcases/gcode.dict $OUT/candle_$FUZZING_ENGINE\_$SANITIZER.dict


# create seed_corpus.zip
zip -r $OUT/candle_$FUZZING_ENGINE\_$SANITIZER\_seed_corpus.zip $SRC/seed_corpus/*


# build fuzzers
# e.g.
# $CXX $CXXFLAGS -std=c++11 -Iinclude \
#     /path/to/name_of_fuzzer.cc -o $OUT/name_of_fuzzer \
#     $LIB_FUZZING_ENGINE /path/to/library.a

export QTDIR="/usr/local/Qt-5.15.5"

# METHOD 1: use qmake to compile --> leads to dynamically linked libraries which are not present in the base-runner container
cd parser
$QTDIR/bin/qmake -makefile
make
mv parser $OUT/candle_$FUZZING_ENGINE\_$SANITIZER
rm *.o

# METHOD 2: manually compile everything - I took all the Includes and Libraries from the command generated by qmake, but changing nothing
#export QTINCLUDE="-I. -I. -I/usr/local/Qt-5.15.5/include -I/usr/local/Qt-5.15.5/include/QtWidgets -I/usr/local/Qt-5.15.5/include/QtGui -I/usr/local/Qt-5.15.5/include/QtCore -I. -I/usr/local/Qt-5.15.5/mkspecs/linux-clang-libc++"
#export QTSTATICLIBS="/usr/local/Qt-5.15.5/lib/libQt5Widgets.a /usr/local/Qt-5.15.5/lib/libQt5Gui.a /usr/local/Qt-5.15.5/lib/libqtlibpng.a /usr/local/Qt-5.15.5/lib/libqtharfbuzz.a /usr/local/Qt-5.15.5/lib/libQt5Core.a /usr/local/Qt-5.15.5/lib/libqtpcre2.a"
#export QTDYNAMICLIBS="-ldouble-conversion -lm -licui18n -licuuc -licudata -ldl -lgthread-2.0 -lglib-2.0 -lGL -lpthread"
#$CXX $CXXFLAGS $QTINCLUDE $SRC/parser/*.cpp $SRC/parser/tables/gcodetablemodel.cpp -o $OUT/candle_$FUZZING_ENGINE\_$SANITIZER $LIB_FUZZING_ENGINE $QTSTATICLIBS $QTDYNAMICLIBS -fPIC


# METHOD 3: manually compiling, but changing the dynamic libs to static ones --> leads to several errors
#export QTSTATICLIBS="/usr/local/Qt-5.15.5/lib/libQt5Widgets.a /usr/local/Qt-5.15.5/lib/libQt5Gui.a /usr/local/Qt-5.15.5/lib/libqtlibpng.a /usr/local/Qt-5.15.5/lib/libqtharfbuzz.a /usr/local/Qt-5.15.5/lib/libQt5Core.a /usr/local/Qt-5.15.5/lib/libqtpcre2.a"
#export QTDYNAMICLIBSNOWSTATIC="/usr/lib/x86_64-linux-gnu/libdouble-conversion.a /usr/lib/x86_64-linux-gnu/libm.a /usr/lib/x86_64-linux-gnu/libicui18n.a /usr/lib/x86_64-linux-gnu/libicuuc.a /usr/lib/x86_64-linux-gnu/libicudata.a /usr/lib/x86_64-linux-gnu/libdl.a /usr/lib/x86_64-linux-gnu/libgthread-2.0.a /usr/lib/x86_64-linux-gnu/libglib-2.0.a -lGL -lpthread"
#$CXX $CXXFLAGS $QTINCLUDE $SRC/parser/*.cpp $SRC/parser/tables/gcodetablemodel.cpp -o $OUT/candle_$FUZZING_ENGINE\_$SANITIZER $LIB_FUZZING_ENGINE $QTSTATICLIBS $QTDYNAMICLIBSNOWSTATIC -fPIC
